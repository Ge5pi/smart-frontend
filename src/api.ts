// api.ts
import axios from 'axios';

// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Axios ---
const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:8000';
console.log("üöÄ VITE_API_URL:", import.meta.env.VITE_API_URL);

const api = axios.create({
  baseURL: API_URL,
  withCredentials: true
});

// –ò–Ω—Ç–µ—Ä—Ü–µ–ø—Ç–æ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
api.interceptors.request.use(
  (config) => {
    const token = localStorage.getItem('authToken');
    if (token) {
      config.headers['Authorization'] = `Bearer ${token}`;
    }
    return config;
  },
  (error) => {
    return Promise.reject(error);
  }
);

// --- –¢–∏–ø–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è ReportPage ---

// –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –±—ç–∫–µ–Ω–¥—É
interface DatabaseAnalysisResults {
  insights: Record<string, string>;
  correlations: Record<string, Record<string, Record<string, number | null>>>;
}

// –¢–∏–ø –¥–ª—è –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –±—ç–∫–µ–Ω–¥ –≤–µ—Ä–Ω–µ—Ç –µ–µ –≤ –ø–æ–ª–µ results
// (—Ö–æ—Ç—è —Ç–µ–∫—É—â–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –±—ç–∫–∞ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞–µ—Ç, —ç—Ç–æ —Ö–æ—Ä–æ—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞)
interface ErrorResults {
  error: string;
  details?: string;
}

export interface EnhancedReport {
  id: number;
  status: string;
  created_at: string;
  results: DatabaseAnalysisResults | ErrorResults | null;
}


// --- –§—É–Ω–∫—Ü–∏–∏ API ---

/** –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞ –ø–æ ID */
export const getReport = (reportId: string) => {
  // –≠–Ω–¥–ø–æ–∏–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç database_analytics.py
  return api.get<EnhancedReport>(`/analytics/database/reports/${reportId}`);
};

/** –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø–æ–ª—å–∑—É–µ–º FormData –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Form –Ω–∞ –±—ç–∫–µ–Ω–¥–µ) */
export const startDatabaseAnalysis = (connectionString: string, dbType: 'postgres' | 'sqlserver') => {
  const formData = new FormData();
  formData.append('connectionString', connectionString);
  formData.append('dbType', dbType);
  // –≠–Ω–¥–ø–æ–∏–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç database_analytics.py
  return api.post('/analytics/database/analyze', formData, {
    headers: {
      'Content-Type': 'multipart/form-data',
    },
  });
};

export default api;